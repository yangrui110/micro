content_assist_add_import=true
content_assist_autoactivation=true
content_assist_autoactivation_delay=0
content_assist_autoactivation_triggers_java=.abcdefghijklmnopqrstuvwxyz
content_assist_autoactivation_triggers_javadoc=@\#
content_assist_autoinsert=true
content_assist_case_sensitivity=false
content_assist_disabled_computers=org.eclipse.jdt.ui.javaNoTypeProposalCategory\u0000org.eclipse.jdt.ui.javaTypeProposalCategory\u0000org.eclipse.jdt.ui.textProposalCategory\u0000org.eclipse.recommenders.calls.rcp.proposalCategory.templates\u0000org.eclipse.recommenders.chain.rcp.proposalCategory.chain\u0000org.eclipse.recommenders.completion.rcp.proposalCategory.intelligent\u0000
content_assist_fill_method_arguments=true
content_assist_guess_method_arguments=false
content_assist_insert_completion=true
content_assist_lru_history=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><history maxLHS\="100" maxRHS\="10"><lhs name\="java.lang.Enum"><rhs name\="org.apache.ibatis.mapping.FetchType"/><rhs name\="com.yangrui.micro.basic.exception.ResultEnum"/><rhs name\="org.apache.ibatis.type.JdbcType"/><rhs name\="com.alibaba.fastjson.serializer.SerializerFeature"/><rhs name\="com.alibaba.fastjson.parser.Feature"/><rhs name\="com.yangrui.util.ResultEnum"/></lhs><lhs name\="org.springframework.http.converter.AbstractHttpMessageConverter"><rhs name\="org.springframework.http.converter.StringHttpMessageConverter"/><rhs name\="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter"/></lhs><lhs name\="org.springframework.http.converter.HttpMessageConverter"><rhs name\="org.springframework.http.converter.StringHttpMessageConverter"/><rhs name\="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter"/></lhs><lhs name\="org.springframework.http.converter.StringHttpMessageConverter"><rhs name\="org.springframework.http.converter.StringHttpMessageConverter"/></lhs><lhs name\="org.springframework.web.servlet.mvc.method.annotation.ResponseBodyAdvice"><rhs name\="com.alibaba.fastjson.support.spring.FastJsonpResponseBodyAdvice"/></lhs><lhs name\="com.alibaba.fastjson.support.spring.FastJsonpResponseBodyAdvice"><rhs name\="com.alibaba.fastjson.support.spring.FastJsonpResponseBodyAdvice"/></lhs><lhs name\="org.springframework.http.converter.GenericHttpMessageConverter"><rhs name\="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter"/></lhs><lhs name\="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter"><rhs name\="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter"/></lhs><lhs name\="com.yangrui.micro.banner.entity.Banner"><rhs name\="com.yangrui.micro.banner.entity.Banner"/></lhs><lhs name\="com.yangrui.micro.image.entity.Image"><rhs name\="com.yangrui.micro.image.entity.Image"/></lhs><lhs name\="org.springframework.web.servlet.ModelAndView"><rhs name\="org.springframework.web.servlet.ModelAndView"/></lhs><lhs name\="java.lang.Throwable"><rhs name\="com.yangrui.micro.basic.exception.BaseException"/></lhs><lhs name\="java.lang.Exception"><rhs name\="com.yangrui.micro.basic.exception.BaseException"/></lhs><lhs name\="com.yangrui.micro.basic.exception.ExceptionEntity"><rhs name\="com.yangrui.micro.basic.exception.ExceptionEntity"/></lhs><lhs name\="java.util.Map"><rhs name\="com.alibaba.fastjson.JSONObject"/><rhs name\="java.util.HashMap"/></lhs><lhs name\="java.lang.Cloneable"><rhs name\="com.alibaba.fastjson.JSONObject"/></lhs><lhs name\="java.lang.reflect.InvocationHandler"><rhs name\="com.alibaba.fastjson.JSONObject"/></lhs><lhs name\="com.alibaba.fastjson.JSON"><rhs name\="com.alibaba.fastjson.JSONObject"/></lhs><lhs name\="com.alibaba.fastjson.JSONStreamAware"><rhs name\="com.alibaba.fastjson.JSONObject"/></lhs><lhs name\="com.alibaba.fastjson.JSONAware"><rhs name\="com.alibaba.fastjson.JSONObject"/></lhs><lhs name\="com.alibaba.fastjson.JSONObject"><rhs name\="com.alibaba.fastjson.JSONObject"/></lhs><lhs name\="org.springframework.web.servlet.HandlerExceptionResolver"><rhs name\="com.yangrui.micro.basic.exception.ExceptionHandler"/></lhs><lhs name\="java.io.OutputStream"><rhs name\="java.io.ByteArrayOutputStream"/><rhs name\="java.io.PrintStream"/><rhs name\="java.io.FileOutputStream"/><rhs name\="java.io.BufferedOutputStream"/></lhs><lhs name\="java.io.Closeable"><rhs name\="java.io.ByteArrayOutputStream"/><rhs name\="java.io.PrintStream"/><rhs name\="java.io.FileOutputStream"/><rhs name\="java.io.BufferedOutputStream"/></lhs><lhs name\="java.lang.AutoCloseable"><rhs name\="java.io.ByteArrayOutputStream"/><rhs name\="java.io.PrintStream"/><rhs name\="java.io.FileOutputStream"/><rhs name\="java.io.BufferedOutputStream"/><rhs name\="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/></lhs><lhs name\="java.io.Flushable"><rhs name\="java.io.ByteArrayOutputStream"/><rhs name\="java.io.PrintStream"/><rhs name\="java.io.FileOutputStream"/><rhs name\="java.io.BufferedOutputStream"/></lhs><lhs name\="java.io.ByteArrayOutputStream"><rhs name\="java.io.ByteArrayOutputStream"/></lhs><lhs name\="java.lang.Appendable"><rhs name\="java.io.PrintStream"/><rhs name\="java.lang.StringBuilder"/></lhs><lhs name\="java.io.FilterOutputStream"><rhs name\="java.io.PrintStream"/><rhs name\="java.io.BufferedOutputStream"/></lhs><lhs name\="java.io.PrintStream"><rhs name\="java.io.PrintStream"/></lhs><lhs name\="com.yangrui.micro.basic.exception.ResultEntity"><rhs name\="com.yangrui.micro.basic.exception.ResultEntity"/></lhs><lhs name\="com.yangrui.micro.basic.exception.ResultEnum"><rhs name\="com.yangrui.micro.basic.exception.ResultEnum"/></lhs><lhs name\="org.springframework.core.io.InputStreamSource"><rhs name\="org.springframework.core.io.ClassPathResource"/><rhs name\="org.springframework.core.io.PathResource"/></lhs><lhs name\="org.springframework.core.io.Resource"><rhs name\="org.springframework.core.io.ClassPathResource"/><rhs name\="org.springframework.core.io.PathResource"/></lhs><lhs name\="com.yangrui.util.ResultEntity"><rhs name\="com.yangrui.util.ResultEntity"/></lhs><lhs name\="com.yangrui.util.ResultEnum"><rhs name\="com.yangrui.util.ResultEnum"/></lhs><lhs name\="org.springframework.web.multipart.MultipartResolver"><rhs name\="org.springframework.web.multipart.commons.CommonsMultipartResolver"/></lhs><lhs name\="org.springframework.web.context.ServletContextAware"><rhs name\="org.springframework.web.multipart.commons.CommonsMultipartResolver"/><rhs name\="com.yangrui.micro.basic.controller.LoginUserController"/></lhs><lhs name\="org.springframework.beans.factory.Aware"><rhs name\="org.springframework.web.multipart.commons.CommonsMultipartResolver"/><rhs name\="org.springframework.context.support.ReloadableResourceBundleMessageSource"/><rhs name\="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/><rhs name\="org.springframework.data.redis.core.StringRedisTemplate"/><rhs name\="com.yangrui.micro.basic.controller.LoginUserController"/></lhs><lhs name\="org.springframework.web.multipart.commons.CommonsFileUploadSupport"><rhs name\="org.springframework.web.multipart.commons.CommonsMultipartResolver"/></lhs><lhs name\="org.springframework.web.multipart.commons.CommonsMultipartResolver"><rhs name\="org.springframework.web.multipart.commons.CommonsMultipartResolver"/></lhs><lhs name\="java.io.File"><rhs name\="java.io.File"/></lhs><lhs name\="java.io.FileOutputStream"><rhs name\="java.io.FileOutputStream"/></lhs><lhs name\="java.io.BufferedOutputStream"><rhs name\="java.io.BufferedOutputStream"/></lhs><lhs name\="com.yangrui.micro.article.entity.Article"><rhs name\="com.yangrui.micro.article.entity.Article"/></lhs><lhs name\="com.yangrui.util.ExceptionEntity"><rhs name\="com.yangrui.util.ExceptionEntity"/></lhs><lhs name\="java.util.Collection"><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.lang.Iterable"><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.util.List"><rhs name\="java.util.ArrayList"/></lhs><lhs name\="org.springframework.util.MimeType"><rhs name\="org.springframework.http.MediaType"/></lhs><lhs name\="org.springframework.http.MediaType"><rhs name\="org.springframework.http.MediaType"/></lhs><lhs name\="javax.validation.ValidatorFactory"><rhs name\="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/></lhs><lhs name\="org.springframework.context.ApplicationContextAware"><rhs name\="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/></lhs><lhs name\="org.springframework.beans.factory.InitializingBean"><rhs name\="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/><rhs name\="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"/><rhs name\="org.springframework.data.redis.core.StringRedisTemplate"/><rhs name\="com.yangrui.micro.basic.controller.LoginUserController"/></lhs><lhs name\="org.springframework.beans.factory.DisposableBean"><rhs name\="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/><rhs name\="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"/><rhs name\="com.yangrui.micro.basic.controller.LoginUserController"/></lhs><lhs name\="org.springframework.validation.beanvalidation.SpringValidatorAdapter"><rhs name\="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/></lhs><lhs name\="org.springframework.validation.SmartValidator"><rhs name\="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/></lhs><lhs name\="org.springframework.validation.Validator"><rhs name\="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/></lhs><lhs name\="javax.validation.Validator"><rhs name\="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/></lhs><lhs name\="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"><rhs name\="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/></lhs><lhs name\="javax.validation.spi.ValidationProvider"><rhs name\="org.hibernate.validator.HibernateValidator"/></lhs><lhs name\="org.hibernate.validator.HibernateValidator"><rhs name\="org.hibernate.validator.HibernateValidator"/></lhs><lhs name\="org.springframework.context.ResourceLoaderAware"><rhs name\="org.springframework.context.support.ReloadableResourceBundleMessageSource"/></lhs><lhs name\="org.springframework.context.support.AbstractResourceBasedMessageSource"><rhs name\="org.springframework.context.support.ReloadableResourceBundleMessageSource"/></lhs><lhs name\="org.springframework.context.support.AbstractMessageSource"><rhs name\="org.springframework.context.support.ReloadableResourceBundleMessageSource"/></lhs><lhs name\="org.springframework.context.HierarchicalMessageSource"><rhs name\="org.springframework.context.support.ReloadableResourceBundleMessageSource"/></lhs><lhs name\="org.springframework.context.MessageSource"><rhs name\="org.springframework.context.support.ReloadableResourceBundleMessageSource"/></lhs><lhs name\="org.springframework.context.support.MessageSourceSupport"><rhs name\="org.springframework.context.support.ReloadableResourceBundleMessageSource"/></lhs><lhs name\="org.springframework.context.support.ReloadableResourceBundleMessageSource"><rhs name\="org.springframework.context.support.ReloadableResourceBundleMessageSource"/></lhs><lhs name\="redis.clients.jedis.JedisPoolConfig"><rhs name\="redis.clients.jedis.JedisPoolConfig"/></lhs><lhs name\="org.springframework.data.redis.connection.RedisConnectionFactory"><rhs name\="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"/></lhs><lhs name\="org.springframework.dao.support.PersistenceExceptionTranslator"><rhs name\="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"/></lhs><lhs name\="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"><rhs name\="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"/></lhs><lhs name\="org.springframework.data.redis.core.RedisTemplate"><rhs name\="org.springframework.data.redis.core.StringRedisTemplate"/></lhs><lhs name\="org.springframework.data.redis.core.RedisOperations"><rhs name\="org.springframework.data.redis.core.StringRedisTemplate"/></lhs><lhs name\="org.springframework.beans.factory.BeanClassLoaderAware"><rhs name\="org.springframework.data.redis.core.StringRedisTemplate"/></lhs><lhs name\="org.springframework.data.redis.core.RedisAccessor"><rhs name\="org.springframework.data.redis.core.StringRedisTemplate"/></lhs><lhs name\="org.springframework.data.redis.core.StringRedisTemplate"><rhs name\="org.springframework.data.redis.core.StringRedisTemplate"/></lhs><lhs name\="org.springframework.web.filter.GenericFilterBean"><rhs name\="com.yangrui.micro.basic.controller.LoginUserController"/></lhs><lhs name\="javax.servlet.Filter"><rhs name\="com.yangrui.micro.basic.controller.LoginUserController"/><rhs name\="com.yangrui.micro.config.WebFilter"/></lhs><lhs name\="org.springframework.beans.factory.BeanNameAware"><rhs name\="com.yangrui.micro.basic.controller.LoginUserController"/></lhs><lhs name\="org.springframework.context.EnvironmentAware"><rhs name\="com.yangrui.micro.basic.controller.LoginUserController"/></lhs><lhs name\="org.springframework.core.env.EnvironmentCapable"><rhs name\="com.yangrui.micro.basic.controller.LoginUserController"/></lhs><lhs name\="org.springframework.web.filter.OncePerRequestFilter"><rhs name\="com.yangrui.micro.basic.controller.LoginUserController"/></lhs><lhs name\="org.springframework.web.servlet.HandlerInterceptor"><rhs name\="com.yangrui.micro.basic.controller.LoginUserController"/><rhs name\="com.yangrui.micro.basic.controller.LoginInterceptor"/></lhs><lhs name\="com.yangrui.micro.user.vo.AccountVo"><rhs name\="com.yangrui.micro.user.vo.AccountVo"/></lhs><lhs name\="com.yangrui.micro.config.WebFilter"><rhs name\="com.yangrui.micro.config.WebFilter"/></lhs><lhs name\="com.yangrui.micro.article.vo.ArticleVo"><rhs name\="com.yangrui.micro.article.vo.ArticleVo"/></lhs><lhs name\="com.yangrui.micro.article.entity.ArticleLabel"><rhs name\="com.yangrui.micro.article.entity.ArticleLabel"/></lhs><lhs name\="com.alibaba.fastjson.support.config.FastJsonConfig"><rhs name\="com.alibaba.fastjson.support.config.FastJsonConfig"/></lhs><lhs name\="java.lang.CharSequence"><rhs name\="java.lang.StringBuilder"/></lhs><lhs name\="java.lang.AbstractStringBuilder"><rhs name\="java.lang.StringBuilder"/></lhs><lhs name\="com.alibaba.fastjson.parser.ParserConfig"><rhs name\="com.alibaba.fastjson.parser.ParserConfig"/></lhs></history>
content_assist_number_of_computers=25
content_assist_prefix_completion=false
content_assist_proposals_background=255,255,255
content_assist_proposals_foreground=0,0,0
content_assist_show_visible_proposals=true
content_assist_sorter=org.eclipse.jdt.ui.RelevanceSorter
eclipse.preferences.version=1
org.eclipse.jdt.ui.formatterprofiles.version=13
org.eclipse.jdt.ui.text.code_templates_migrated=true
org.eclipse.jdt.ui.text.custom_code_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates/>
org.eclipse.jdt.ui.text.custom_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="true" context\="aspectj" deleted\="false" description\="adviceexecution pointcut (AspectJ)" enabled\="true" name\="adviceexecution">adviceexecution()</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="after returning advice (AspectJ)" enabled\="true" name\="after_returning">after(${args}) returning() \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="after throwing advice (AspectJ)" enabled\="true" name\="after_throwing">after(${args}) throwing() \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="around advice (AspectJ)" enabled\="true" name\="around">around(${args}) \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="before advice (AspectJ)" enabled\="true" name\="before">before(${args}) \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="call constructor pointcut (AspectJ)" enabled\="true" name\="call_cons">call(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="call method declaration (AspectJ)" enabled\="true" name\="call_method">call(${modifiers_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="cflow pointcut (AspectJ)" enabled\="true" name\="cflow">cflow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="cflowbelow pointcut (AspectJ)" enabled\="true" name\="cflowbelow">cflowbelow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare error (AspectJ)" enabled\="true" name\="dece">declare error \: ${pointcut_expression} \: "";</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare parents (AspectJ)" enabled\="true" name\="decp_extends">declare parents \: ${type_pattern} extends ${type};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare parents (AspectJ)" enabled\="true" name\="decp_implements">declare parents \: ${type_pattern} implements ${type};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare soft (AspectJ)" enabled\="true" name\="decs">declare soft \: ${exception_type} \: ${pointcut_expression};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare warning (AspectJ)" enabled\="true" name\="decw">declare warning \: ${pointcut_expression} \: "";</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="execution of a constructor pointcut (AspectJ)" enabled\="true" name\="execution_cons">execution(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="execution of a method pointcut (AspectJ)" enabled\="true" name\="execution_method">execution(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="get pointcut (AspectJ)" enabled\="true" name\="get">get(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="handler pointcut (AspectJ)" enabled\="true" name\="handler">handler(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="initialization pointcut (AspectJ)" enabled\="true" name\="initialization">initialization(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pointcut declaration (AspectJ)" enabled\="true" name\="pc">pointcut ${name}() \: ${pointcut_expression};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="percflow (AspectJ)" enabled\="true" name\="percflow">percflow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="percflowbelow (AspectJ)" enabled\="true" name\="percflowbelow">percflowbelow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pertarget (AspectJ)" enabled\="true" name\="pertarget">pertarget(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="perthis (AspectJ)" enabled\="true" name\="perthis">perthis(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pertypewithin (AspectJ)" enabled\="true" name\="pertypewithin">pertypewithin(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pointcut (AspectJ)" enabled\="true" name\="pointcut">pointcut ${name}(${args}) \: ${pointcut_expression};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="preinitialization pointcut (AspectJ)" enabled\="true" name\="preinitialization">preinitialization(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="set pointcut (AspectJ)" enabled\="true" name\="set">set(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="staticinitialization pointcut (AspectJ)" enabled\="true" name\="staticinitialization">staticinitialization(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="thisJoinPoint (AspectJ)" enabled\="true" name\="thisJoinPoint">thisJoinPoint</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="thisJoinPointStaticPart (AspectJ)" enabled\="true" name\="thisJoinPointStaticPart">thisJoinPointStaticPart</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="within pointcut (AspectJ)" enabled\="true" name\="within">within(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="withincode of a constructor pointcut (AspectJ)" enabled\="true" name\="withincode_cons">withincode(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="withincode of a method pointcut (AspectJ)" enabled\="true" name\="withincode_method">withincode(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template></templates>
org.eclipse.jdt.ui.text.templates_migrated=true
sourceHoverBackgroundColor=44,49,53
spelling_ignore_ampersand_in_properties=true
spelling_ignore_digits=true
spelling_ignore_java_strings=true
spelling_ignore_mixed=true
spelling_ignore_non_letters=true
spelling_ignore_sentence=true
spelling_ignore_single_letters=true
spelling_ignore_upper=true
spelling_ignore_urls=true
spelling_locale_initialized=true
spelling_user_dictionary_encoding=
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
